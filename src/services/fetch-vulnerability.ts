/* eslint-disable @typescript-eslint/naming-convention */
import axios from "axios";
import * as vscode from "vscode";
import { NVDCVEResult } from "../types";

const { showInformationMessage, showErrorMessage } = vscode.window;
const nistURL = "https://services.nvd.nist.gov/rest/json/cve/1.0";
const cveURL = (id: string) => `${nistURL}/${id}?addOns=dictionaryCpes`;

/** View information for a single vulnerability */
export async function fetchVulnerability(id: string) {
  const url = cveURL(id);
  showInformationMessage(`Checking NVD for ${id} ...`);
  const info: NVDCVEResult = await axios
    .get(url)
    .then((res) => res.data)
    .catch(() => ({}));
  if (!Array.isArray(info?.result?.CVE_Items)) {
    return showErrorMessage(`No vulnerability data found for ${id}`);
  }

  // ['CVE_Items'][x]['cve']['problemtype']['problemtype_data'][0]['description'][0]['value']
  const { result } = info;
  const { description, CVE_data_meta } = result.CVE_Items[0].cve;
  const { description_data } = description;
  const msg = `${CVE_data_meta.ID}: "${description_data[0].value}"`;
  return showInformationMessage(msg, {
    modal: true,
    detail: `Source: ${url}`
  });
}
